/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package eti_verma_sdet;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.Writer;
import java.util.EnumSet;

import javax.imageio.stream.FileImageOutputStream;

import org.openqa.selenium.Proxy;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.CapabilityType;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.testng.annotations.*;
//import static org.testng.Assert.*;

import com.google.gson.JsonArray;

import io.github.bonigarcia.wdm.WebDriverManager;
import net.lightbody.bmp.BrowserMobProxy;
import net.lightbody.bmp.BrowserMobProxyServer;
import net.lightbody.bmp.core.har.Har;
import net.lightbody.bmp.proxy.CaptureType;
import java.io.FileWriter;
import java.io.IOException;

public class AppTest<JASONObject> {
    @Test
     public void appHasAGreeting(Object har) throws InterruptedException, IOException {
       
        BrowserMobProxyServer proxyMob = new BrowserMobProxyServer();
        proxyMob.start(4433);
        Proxy seleProxy = new Proxy();
        seleProxy.setHttpProxy("localHost" + proxyMob.getPort());
        seleProxy.setSslProxy("localHost" + proxyMob.getPort());

        DesiredCapabilities capabilities = new DesiredCapabilities();
        capabilities.setCapability(CapabilityType.PROXY, seleProxy);
        EnumSet<CaptureType> types = CaptureType.getAllContentCaptureTypes();
        types.addAll(CaptureType.getHeaderCaptureTypes());
        types.addAll(CaptureType.getRequestCaptureTypes());
        types.addAll(CaptureType.getResponseCaptureTypes());


        //start browser
        WebDriverManager.chromedriver().setup();
        ChromeOptions option = new ChromeOptions();
        option.setProxy(seleProxy);
        WebDriver driver = new ChromeDriver(option);
        driver.get("https://exactspace.co/");
        driver.manage().window().maximize();
        Thread.sleep(3000);
        driver.quit();


        File file = new File(System.getProperty("user.dir")+ "app\\src\\test\\java\\eti_verma_sdet\\AppTest.java");
        System.out.println("Given all HAR file data");
        har = proxyMob.getHar();
        proxyMob.stop();
       
      JsonArray[] array = (JsonArray[])har;
       int countNum = array.length;
       int StatusCode2XX = 0;
       int StatusCode4XX = 0;
       int StatusCode5XX = 0;
          
        for(Object count : array){
         JASONObject obj = (JASONObject) count;
         JASONObject result = (JASONObject)obj.get("result");
            int statusCode = Integer.parseInt(result.get("status").toString());
            if(statusCode>=200 && statusCode<400){
                System.out.println("Status code for 2XX is "+ StatusCode2XX);
                StatusCode2XX++;
            }else if(statusCode >=400 && statusCode< 500){
                System.out.println("Status code for 4XX is "+ StatusCode4XX);
                StatusCode4XX++;
            }else if(statusCode>=500 && statusCode <600){
                System.out.println("Status code for 5XX is "+ StatusCode5XX);
                StatusCode5XX++;
            }else{
                statusCode++;
            }
        
        }
    }
    
    private static void saveHarFile(Har har) {
    try (FileWriter file= new FileWriter("Eti_Verma_SDET.har")) {
        file.write(har.getLog().toString());
    } catch (IOException e) {
        e.printStackTrace();
    }

 }
}

